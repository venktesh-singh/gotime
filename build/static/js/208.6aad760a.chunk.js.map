{"version":3,"file":"static/js/208.6aad760a.chunk.js","mappings":"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","sources":["redux/actions/eventAction.js","views/event/SimpleCard.jsx","views/event/event-add.jsx"],"sourcesContent":["import axios from 'axios';\nimport * as CONSTANT from '../../config';\nexport const GET_EVENT_LIST = 'GET_EVENT_LIST';\nexport const ADD_EVENT = 'ADD_EVENT';\nexport const UPDATE_EVENT = 'UPDATE_EVENT';\nexport const DELETE_EVENT = 'DELETE_EVENT';\n\nexport const getEventList = () => (dispatch) => {\n    axios.get(CONSTANT.BASE_URL + '/').then((res) => {\n        dispatch({\n            type: GET_EVENT_LIST,\n            payload: res.data.event,\n        });\n    });\n};\n\nexport const updateEvent = (eventData) => (dispatch) => {\n   \n    axios\n      .post(CONSTANT.BASE_URL + \"/event/\", eventData)\n      .then((res) => {\n        dispatch({\n          type: UPDATE_EVENT,\n          payload: res.data,\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error updating event:\", error);\n        // Handle the error here (e.g., dispatch an error action, show an error message)\n    });\n};\n     \n\nexport const deleteEvent = async (_id)=> {\n    await axios.delete(CONSTANT.BASE_URL +`/delete/${_id }`)\n};\n\nexport const addEvent = async (event) => {\n    await axios.post(CONSTANT.BASE_URL + `/`, event)\n }","import { Card } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\n\r\nconst CardRoot = styled(Card)(() => ({\r\n  height: '100%',\r\n  padding: '20px 24px',\r\n}));\r\n\r\nconst CardTitle = styled('div')(({ subtitle }) => ({\r\n  fontSize: '1.2rem',\r\n  fontWeight: '500',\r\n  textTransform: 'capitalize',\r\n  marginBottom: !subtitle && '16px',\r\n}));\r\n\r\nconst SimpleCard = ({ children, title, subtitle, icon }) => {\r\n  return (\r\n    <CardRoot elevation={6}>\r\n      <CardTitle subtitle={subtitle}>{title}</CardTitle>\r\n      {subtitle && <Box sx={{ mb: 2 }}>{subtitle}</Box>}\r\n      {children}\r\n    </CardRoot>\r\n  );\r\n};\r\n\r\nexport default SimpleCard;\r\n","import React, {useState,useEffect} from 'react';\r\nimport { Stack } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport SimpleCard from './SimpleCard';\r\nimport { Button, Grid, TextField } from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateEvent } from 'src/redux/actions/eventAction';\r\nimport { useHistory } from 'react-router-dom';  \r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport moment from \"moment\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';  \r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n\r\nconst Form = styled('form')(() => ({\r\n  paddingLeft: '16px',\r\n  paddingRight: '16px',\r\n}));\r\n\r\nconst StyledTextField = styled(TextField)(() => ({\r\n  marginBottom: '16px',\r\n}));\r\n\r\nconst AddEvent = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [latitude, setLatitude] = useState(null);\r\n    const [longitude, setLongitude] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          setLatitude(position.coords.latitude);\r\n          setLongitude(position.coords.longitude);\r\n        },\r\n        (error) => {\r\n          console.log(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      console.log('Geolocation is not supported by this browser.');\r\n    }\r\n  }, []);\r\n  \r\n    const handleSubmit = async (values) => {\r\n      const eventData = {\r\n        event_name: values.event_name,\r\n        description: values.description,\r\n        start_time: moment(values.start_time, 'HH:mm').format('HH:mm'),\r\n        end_time: moment(values.end_time, 'HH:mm').format('HH:mm'),\r\n        address: values.address,\r\n        event_date: moment(values.event_date).format('YYYY-MM-DD'),\r\n        max_players: values.max_players,\r\n        location_hint: values.location_hint,\r\n        location:{\r\n          latitude:latitude,\r\n          longitude:longitude\r\n        }\r\n      };\r\n  \r\n      try {\r\n        await dispatch(updateEvent(eventData));\r\n        toast.success('Event Added Successfully!');\r\n       // history.push('/event/event-list');\r\n      } catch (error) {\r\n        console.error('Error adding event:', error);\r\n        toast.error('Failed to add event. Please try again later.');\r\n      }\r\n    };\r\n  \r\n  \r\n    const handleButtonClick = () => {\r\n        // Navigate back to the previous page\r\n        history.goBack();\r\n    };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        theme=\"colored\"\r\n        autoClose={2000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Container>\r\n        <Button\r\n          sx={{ mb: 2, pl: 1 }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleButtonClick}\r\n        >\r\n          <ArrowBackIcon aria-label=\"ArrowBackIcon\" aria-haspopup=\"true\" />\r\n          Back\r\n        </Button>\r\n\r\n        <Stack spacing={3}>\r\n          <SimpleCard title=\"Add New Event\">\r\n            <Formik\r\n              onSubmit={handleSubmit}\r\n              enableReinitialize={true}\r\n              initialValues={initialValues}\r\n              validationSchema={eventSchema}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              }) => (\r\n                <Form onSubmit={handleSubmit}>  \r\n                  <Grid container spacing={3}>\r\n                    <Grid item sm={6} xs={12}>\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"event_name\"\r\n                        label=\"Event name\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.event_name || ''}\r\n                        error={Boolean(touched.event_name && errors.event_name)}\r\n                        helperText={touched.event_name && errors.event_name}\r\n                      />\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"description\"\r\n                        label=\"Description\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.description || ''}\r\n                        error={Boolean(touched.description && errors.description)}\r\n                        helperText={touched.description && errors.description}\r\n                      />\r\n                      <StyledTextField\r\n                        type=\"time\"\r\n                        name=\"start_time\"\r\n                        label=\"Start Time\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.start_time || ''}\r\n                        error={Boolean(touched.start_time && errors.start_time)}\r\n                        helperText={touched.start_time && errors.start_time}\r\n                        style={{ color: '#000', width: '100%' }}\r\n                      />\r\n                      <StyledTextField\r\n                        type=\"time\"\r\n                        name=\"end_time\"\r\n                        label=\"End Time\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.end_time || ''}\r\n                        error={Boolean(touched.end_time && errors.end_time)}\r\n                        helperText={touched.end_time && errors.end_time}\r\n                        style={{ color: '#000', width: '100%' }}\r\n                      />\r\n                      <StyledTextField\r\n                        type=\"date\"\r\n                        name=\"event_date\"\r\n                        label=\"Event Date\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange} // Add the onChange event handler\r\n                        value={values.event_date || ''}\r\n                        error={Boolean(touched.event_date && errors.event_date)}\r\n                        helperText={touched.event_date && errors.event_date}\r\n                        style={{ color: '#000', width: '100%' }}\r\n                      />\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"max_players\"\r\n                        label=\"Max players\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.max_players || ''}\r\n                        error={Boolean(touched.max_players && errors.max_players)}\r\n                        helperText={touched.max_players && errors.max_players}\r\n                      />\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"address\"\r\n                        label=\"Address\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.address || ''}\r\n                        error={Boolean(touched.address && errors.address)}\r\n                        helperText={touched.address && errors.address}\r\n                      />\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"location_hint\"\r\n                        label=\"Location Hint\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.location_hint || ''}\r\n                        error={Boolean(touched.location_hint && errors.location_hint)}\r\n                        helperText={touched.location_hint && errors.location_hint}\r\n                      />\r\n                     \r\n\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    sx={{ mb: 2, px: 4, marginTop: '10px' }}\r\n                  >\r\n                    Add Event\r\n                  </Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </SimpleCard>\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst eventSchema = Yup.object().shape({\r\n  event_name: Yup.string().required('Event name is required'),  \r\n  description: Yup.string().required('Description is required'), \r\n  start_time: Yup.string().required('Start Time is required'), \r\n  end_time: Yup.string().required('End Time is required'), \r\n  event_date : Yup.string().required('Event Date is required'), \r\n  max_players: Yup.string().required('Max Players is required'), \r\n  address: Yup.string().required('Address is required'),\r\n  location_hint: Yup.string().required('Location Hint is required'), \r\n  //profile_picture: Yup.string().required('Profile Picture is required'),\r\n});\r\n\r\nconst initialValues = {\r\n  event_name: '',\r\n  description : '',\r\n  start_time : '',\r\n  end_time : '',\r\n  event_date : '',\r\n  max_players: '',\r\n  address : '',\r\n  location_hint : '',\r\n  //profile_picture : '',\r\n};\r\n\r\nexport default AddEvent;\r\n"],"names":["updateEvent","eventData","dispatch","axios","CONSTANT","then","res","type","payload","data","catch","error","console","CardRoot","styled","Card","height","padding","CardTitle","_ref","fontSize","fontWeight","textTransform","marginBottom","subtitle","_ref2","children","title","icon","_jsxs","elevation","_jsx","Box","sx","mb","Container","theme","margin","_defineProperty","breakpoints","down","Form","paddingLeft","paddingRight","StyledTextField","TextField","eventSchema","Yup","shape","event_name","required","description","start_time","end_time","event_date","max_players","address","location_hint","initialValues","useDispatch","history","useHistory","_useState","useState","_useState2","_slicedToArray","latitude","setLatitude","_useState3","_useState4","longitude","setLongitude","useEffect","navigator","geolocation","getCurrentPosition","position","coords","log","message","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","moment","format","location","toast","success","t0","stop","_x","apply","arguments","_Fragment","ToastContainer","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Button","pl","variant","color","onClick","goBack","ArrowBackIcon","Stack","spacing","SimpleCard","Formik","onSubmit","enableReinitialize","validationSchema","_ref4","errors","touched","handleChange","handleBlur","Grid","container","item","sm","xs","fullWidth","name","label","size","onBlur","onChange","value","Boolean","helperText","style","width","px","marginTop"],"sourceRoot":""}