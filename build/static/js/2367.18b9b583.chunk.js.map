{"version":3,"file":"static/js/2367.18b9b583.chunk.js","mappings":"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","sources":["views/users/SimpleCard.jsx","views/users/add-user.jsx"],"sourcesContent":["import { Card } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\n\r\nconst CardRoot = styled(Card)(() => ({\r\n  height: '100%',\r\n  padding: '20px 24px',\r\n}));\r\n\r\nconst CardTitle = styled('div')(({ subtitle }) => ({\r\n  fontSize: '1.2rem',\r\n  fontWeight: '500',\r\n  textTransform: 'capitalize',\r\n  marginBottom: !subtitle && '16px',\r\n}));\r\n\r\nconst SimpleCard = ({ children, title, subtitle, icon }) => {\r\n  return (\r\n    <CardRoot elevation={6}>\r\n      <CardTitle subtitle={subtitle}>{title}</CardTitle>\r\n      {subtitle && <Box sx={{ mb: 2 }}>{subtitle}</Box>}\r\n      {children}\r\n    </CardRoot>\r\n  );\r\n};\r\n\r\nexport default SimpleCard;\r\n","import React, { useState } from 'react';\r\nimport { Stack } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\nimport SimpleCard from './SimpleCard';\r\nimport { Button, Grid, TextField, TextareaAutosize } from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateUser } from 'src/redux/actions/userAction';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n\r\nconst Form = styled('form')(() => ({\r\n  paddingLeft: '16px',\r\n  paddingRight: '16px',\r\n}));\r\n\r\nconst StyledTextField = styled(TextField)(() => ({\r\n  marginBottom: '16px',\r\n}));\r\n\r\nconst handleRedirect = (history) => {\r\n  // Navigate back to the previous page\r\n  history.push(\"/users/user-list\");\r\n};\r\n\r\nconst AddUser = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [uploading, setUploading] = useState(false);\r\n    //console.log(\"File Select\", selectedFile);\r\n    //console.log(\"File Upload\", uploading);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop: (acceptedFiles) => {\r\n        setSelectedFile(acceptedFiles[0]);\r\n        setUploading(false); // Reset the uploading state when a new file is selected\r\n    },\r\n    });\r\n\r\n    const handleSubmit = async (values) => {\r\n      const formData = new FormData();\r\n      formData.append('full_name', values.full_name); \r\n      formData.append('username', values.username);\r\n      formData.append('email', values.email);\r\n      formData.append('password', values.password);\r\n      formData.append('weight', values.weight); \r\n      formData.append('height_feet', values.height_feet);\r\n      formData.append('height_inches', values.height_inches);\r\n      formData.append('age', values.age);\r\n      formData.append('contact_number', values.contact_number);\r\n      formData.append('address', values.address);\r\n      console.log(\"Selected File:\", selectedFile);\r\n      if (selectedFile) {\r\n          formData.append('image', selectedFile);\r\n      } else {\r\n          console.log(\"No file selected\");\r\n      }\r\n  \r\n      const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n  \r\n      setUploading(true);\r\n      try {\r\n        await dispatch(updateUser(formData, config));\r\n          toast.success('User Added Successfully!', {\r\n              // ...\r\n          });\r\n        //dispatch(getCategoryList());\r\n        handleRedirect(history);\r\n      } catch (error) {\r\n        console.error('Error adding user:', error);\r\n        toast.error('Failed to add user. Please try again later.', {\r\n            // ...\r\n        });\r\n      } finally {\r\n        setUploading(false);\r\n      }\r\n    };\r\n  \r\n  \r\n    const handleButtonClick = () => {\r\n        // Navigate back to the previous page\r\n        history.goBack();\r\n    };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        theme=\"colored\"\r\n        autoClose={2000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Container>\r\n        <Button\r\n          sx={{ mb: 2, pl: 1 }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleButtonClick}\r\n        >\r\n          <ArrowBackIcon aria-label=\"ArrowBackIcon\" aria-haspopup=\"true\" />\r\n          Back\r\n        </Button>\r\n\r\n        <Stack spacing={3}>\r\n          <SimpleCard title=\"Add New User\">\r\n            <Formik\r\n              onSubmit={handleSubmit}\r\n              enableReinitialize={true}\r\n              initialValues={initialValues}\r\n              validationSchema={userSchema}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              }) => (\r\n                <Form onSubmit={handleSubmit}>  \r\n                  <Grid container spacing={3}>\r\n                    <Grid item sm={6} xs={12}>\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"full_name\"\r\n                        label=\"Full Name\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.full_name || ''}\r\n                        error={Boolean(touched.full_name && errors.full_name)}\r\n                        helperText={touched.full_name && errors.full_name}\r\n                      />\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"username\"\r\n                        label=\"User Name\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.username || ''}\r\n                        error={Boolean(touched.username && errors.username)}\r\n                        helperText={touched.username && errors.username}\r\n                      />\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"email\"\r\n                        label=\"Email\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.email || ''}\r\n                        error={Boolean(touched.email && errors.email)}\r\n                        helperText={touched.email && errors.email}\r\n                      />\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.password || ''}\r\n                        error={Boolean(touched.password && errors.password)}\r\n                        helperText={touched.password && errors.password}\r\n                      />\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"weight\"\r\n                        label=\"Weight\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.weight || ''}\r\n                        error={Boolean(touched.weight && errors.weight)}\r\n                        helperText={touched.weight && errors.weight}\r\n                      />\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"height_feet\"\r\n                        label=\"Height In Feet\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.height_feet || ''}\r\n                        error={Boolean(touched.height_feet && errors.height_feet)}\r\n                        helperText={touched.height_feet && errors.height_feet}\r\n                      />\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"height_inches\"\r\n                        label=\"Height In Inches\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.height_inches || ''}\r\n                        error={Boolean(touched.height_inches && errors.height_inches)}\r\n                        helperText={touched.height_inches && errors.height_inches}\r\n                      />\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"age\"\r\n                        label=\"Age\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.age || ''}\r\n                        error={Boolean(touched.age && errors.age)}\r\n                        helperText={touched.age && errors.age}\r\n                      />\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"contact_number\"\r\n                        label=\"Contact Number\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.contact_number || ''}\r\n                        error={Boolean(touched.contact_number && errors.contact_number)}\r\n                        helperText={touched.contact_number && errors.contact_number}\r\n                      />\r\n                      <TextareaAutosize\r\n                        fullWidth\r\n                        minRows={2}\r\n                        maxRows={4}\r\n                        style={{ width: '100%',borderRadius: '4px',borderColor:'#ccc',padding: '8px',fontSize: '16px' }}\r\n                        name=\"address\"\r\n                        label=\"Address\"\r\n                        placeholder=\"Enter your Address\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.address || ''}\r\n                        error={Boolean(touched.address && errors.address)}\r\n                        helperText={touched.address && errors.address}\r\n                      />\r\n                      <Box flex={1}>\r\n                        <div style={{border:'1px solid #ccc',padding:'10px',textAlign:'center',margin:'12px 0',borderRadius: '4px'}} {...getRootProps()}>\r\n                            <input type=\"file\" label=\"Profile Pic\" name=\"profile_picture\" {...getInputProps()} />  \r\n                            {isDragActive ? (\r\n                            <p>Drop the image file here ...</p>\r\n                            ) : (\r\n                            <b>\r\n                                Drag and drop an image file here, or click to select file\r\n                            </b>\r\n                            )}\r\n                        </div>\r\n                      </Box>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    sx={{ mb: 2, px: 4 }}\r\n                    disabled={uploading}\r\n                    style={{marginTop:'10px'}}\r\n                  >\r\n                    {uploading ? 'Uploading...' : 'Add User'}\r\n                  </Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </SimpleCard>\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst userSchema = Yup.object().shape({\r\n  full_name: Yup.string().required('Full name is required'),  \r\n  username: Yup.string().required('User name is required'), \r\n  email: Yup.string().required('Email is required'), \r\n  password: Yup.string().required('Password is required'), \r\n  height_feet: Yup.string().required('Height in feet is required'), \r\n  height_inches : Yup.string().required('Height in inches is required'), \r\n  weight: Yup.string().required('Weight is required'), \r\n  age: Yup.number()\r\n  .typeError('Age must be a number')\r\n  .required('Age is required')\r\n  .positive('Age must be a positive number')\r\n  .integer('Age must be an integer'), \r\n  contact_number: Yup.string().required('Contact Number is required'), \r\n  //profile_picture: Yup.string().required('Profile Picture is required'),\r\n});\r\n\r\nconst initialValues = {\r\n  full_name: '',\r\n  username : '',\r\n  email : '',\r\n  password : '',\r\n  weight : '',\r\n  height_feet : '',\r\n  height_inches: '',\r\n  age : '',\r\n  contact_number : '',\r\n  //profile_picture : '',\r\n};\r\n\r\nexport default AddUser;\r\n"],"names":["CardRoot","styled","Card","height","padding","CardTitle","_ref","fontSize","fontWeight","textTransform","marginBottom","subtitle","_ref2","children","title","icon","_jsxs","elevation","_jsx","Box","sx","mb","Container","theme","margin","_defineProperty","breakpoints","down","Form","paddingLeft","paddingRight","StyledTextField","TextField","handleRedirect","history","push","userSchema","Yup","shape","full_name","required","username","email","password","height_feet","height_inches","weight","age","typeError","positive","integer","contact_number","initialValues","dispatch","useDispatch","useHistory","_useState","useState","_useState2","_slicedToArray","selectedFile","setSelectedFile","_useState3","_useState4","uploading","setUploading","_useDropzone","useDropzone","accept","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","formData","config","wrap","_context","prev","next","FormData","append","address","console","log","headers","updateUser","toast","success","t0","error","finish","stop","_x","apply","arguments","_Fragment","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Button","pl","variant","color","onClick","goBack","ArrowBackIcon","Stack","spacing","SimpleCard","Formik","onSubmit","enableReinitialize","validationSchema","_ref4","errors","touched","handleChange","handleBlur","Grid","container","item","sm","xs","fullWidth","name","label","size","onBlur","onChange","value","Boolean","helperText","TextareaAutosize","minRows","maxRows","style","width","borderRadius","borderColor","placeholder","flex","_objectSpread","border","textAlign","type","px","disabled","marginTop"],"sourceRoot":""}