{"version":3,"file":"static/js/803.d073539a.chunk.js","mappings":"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","sources":["views/slot/slot-list.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'; \r\nimport { CSVLink } from 'react-csv'; \r\nimport {\r\n  Card,\r\n  Box,\r\n  Icon,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Paper,\r\n  TablePagination,\r\n  Button,\r\n  TextField\r\n} from \"@mui/material\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport PreviewIcon from '@mui/icons-material/Preview';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport moment from \"moment\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst StyledTextField = styled(TextField)(() => ({\r\n  marginBottom: '16px',\r\n  padding:'0px'\r\n}));\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    minWidth: '1000',\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n      \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0, fontSize: '1rem' } },\r\n    },\r\n    \"& tbody\": {\r\n      \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n  }\r\n));\r\n\r\n\r\nconst Slot = () => {\r\n  const [page, setPage] = useState(0);\r\n  const history = useHistory();\r\n  const [dataList, setDataList] = useState([]);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n const handleSearchQueryChange = (event) => {\r\n   const query = event.target.value;\r\n   setSearchQuery(query);\r\n };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n      setPage(newPage);\r\n  };  \r\n  const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n  };\r\n  \r\n  const paginationta =  useSelector(state => state?.dataList);\r\n  console.log(\"Sia User Data\", dataList);    \r\n    fetch('https://gotimeapi.onrender.com/api/slot/allslots')        \r\n    .then(response => {\r\n      if (!response.ok) {  \r\n        throw new Error('Error: ' + response.status);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      setDataList(data);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching User data:', error);\r\n    });\r\n\r\n    const handleDownloadCSV = () => {\r\n      if (!dataList) {\r\n        return null;\r\n      }\r\n    \r\n      // Prepare the CSV data\r\n      const csvData = dataList.map((subscriber,index) => ({\r\n        SNo: index+1,\r\n        'Sport Name': subscriber.sport,\r\n        'Start Time': subscriber.startTime,\r\n        'End Time': subscriber.endTime,\r\n        Date: moment(subscriber?.createdAt).format('MMMM Do YYYY'),\r\n      }));\r\n    \r\n      // Define the CSV headers\r\n      const headers = [\r\n        { label: 'S.No.', key: 'SNo' },\r\n        { label: 'Sport Name', key: 'Sport Name' },\r\n        { label: 'Start Time', key: 'Start Time' },\r\n        { label: 'End Time', key: 'End Time' },\r\n        { label: 'Date', key: 'Date' },\r\n      ];\r\n    \r\n      // Trigger the CSV download\r\n      const csvOptions = {\r\n        filename: 'slot_data.csv',\r\n        headers: headers,\r\n      };\r\n    \r\n      return (\r\n        <CSVLink data={csvData} {...csvOptions} style={{ color: '#fff',textDecoration:'none' }}>\r\n          Download CSV\r\n        </CSVLink>\r\n      );\r\n    };\r\n\r\n  return (\r\n    <Container>\r\n      \r\n      <Button\r\n        sx={{\r\n          mb: 2,\r\n          pl: 1,\r\n          '&:hover': {\r\n            backgroundColor: 'primary.main',\r\n            color:'#fff'\r\n          },\r\n        }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        component={Link}\r\n        to=\"/slot/slot-add\"\r\n      >\r\n        <AddIcon aria-label=\"AddIcon\"   aria-haspopup=\"true\"/>\r\n        Add New Slot\r\n      </Button>\r\n      <StyledTextField\r\n        size=\"small\"\r\n        type=\"text\"\r\n        value={searchQuery}\r\n        onChange={(event) => handleSearchQueryChange(event)}\r\n        placeholder=\"Search by Title\"\r\n        style={{ float: 'right',backgroundColor:'#fff',padding: '0px' }}\r\n      />\r\n      <TableContainer component={Paper} sx={{ px: 0 }}>\r\n        <Card sx={{ px: 0, py: 0 }} elevation={1}>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <StyledTable>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>S.No.</TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>Sport Name</TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>Start Time</TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>End Time</TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>Date</TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>Action</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n               {dataList?.filter((subscriber) =>\r\n                    subscriber.sport &&\r\n                    subscriber.sport.toLowerCase().includes(searchQuery.toLowerCase())\r\n                  )\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((subscriber, index) => (\r\n                \r\n                <TableRow key={index}>\r\n                    <TableCell align=\"center\">{index + 1}</TableCell>\r\n                    <TableCell align=\"center\">{subscriber?.sport}</TableCell>\r\n                    <TableCell align=\"center\">{moment(subscriber?.startTime, 'HH:mm').format('HH:mm')}   </TableCell>\r\n                    <TableCell align=\"center\">{moment(subscriber?.endTime, 'HH:mm').format('HH:mm')}</TableCell>\r\n                    <TableCell align=\"center\">{moment(subscriber?.createdAt).format('MMMM Do YYYY')}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                    \r\n                      <Link sx={{ m: 0.5 }} variant=\"contained\" to={{ pathname: \"/slot/slot-detail\", state: { subscriber }}} name=\"Slot Detail\" >\r\n                        <PreviewIcon\r\n                            aria-label=\"PreviewIcon\"\r\n                            aria-haspopup=\"true\">\r\n                            <Icon color=\"primary\">view</Icon>\r\n                        </PreviewIcon>\r\n                      </Link>     \r\n                      <Link sx={{ m: 0.5 }} variant=\"contained\" to={{ pathname: \"/slot/slot-edit\", state: { subscriber }}} name=\"Slot Edit\">\r\n                        <EditIcon\r\n                          aria-label=\"EditIcon\"   \r\n                          aria-haspopup=\"true\"\r\n                        >\r\n                          <Icon color=\"primary\">edit</Icon>\r\n                        </EditIcon>\r\n                      </Link>  \r\n                      <DeleteIcon\r\n                        aria-label=\"delete\"\r\n                        aria-haspopup=\"true\"\r\n                        //onClick={() => deleteUsers(subscriber?._id)}\r\n                      >\r\n                        <Icon color=\"error\">close</Icon>\r\n                      </DeleteIcon>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </StyledTable>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', px: 2 }}>  \r\n              <Button variant=\"contained\" >\r\n                  {handleDownloadCSV()}\r\n              </Button>\r\n              <TablePagination\r\n                sx={{ px: 2 }}  \r\n                page={page}\r\n                component=\"div\"\r\n                rowsPerPage={rowsPerPage}\r\n                count={paginationta?.length}  \r\n                onPageChange={handleChangePage}\r\n                rowsPerPageOptions={[10, 20, 30]}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\r\n                backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Card>  \r\n      </TableContainer>\r\n      </Container>\r\n  );\r\n};\r\n\r\nexport default Slot;  \r\n\r\n\r\n"],"names":["StyledTextField","styled","TextField","marginBottom","padding","Container","_ref","_ref2","theme","margin","_defineProperty","breakpoints","down","StyledTable","Table","minWidth","whiteSpace","paddingLeft","paddingRight","fontSize","textTransform","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","useHistory","_useState4","dataList","setDataList","_useState5","_useState6","rowsPerPage","setRowsPerPage","_useState7","_useState8","searchQuery","setSearchQuery","paginationta","useSelector","state","console","log","fetch","then","response","ok","Error","status","json","data","catch","error","_jsxs","children","Button","sx","mb","pl","backgroundColor","color","variant","component","Link","to","_jsx","AddIcon","size","type","value","onChange","event","query","target","handleSearchQueryChange","placeholder","style","float","TableContainer","Paper","px","Card","py","elevation","Box","width","overflow","TableHead","TableRow","TableCell","align","fontWeight","TableBody","filter","subscriber","sport","toLowerCase","includes","slice","map","index","moment","startTime","format","endTime","createdAt","m","pathname","name","PreviewIcon","Icon","EditIcon","DeleteIcon","display","justifyContent","alignItems","csvData","SNo","Date","csvOptions","filename","headers","label","key","CSVLink","_objectSpread","textDecoration","handleDownloadCSV","TablePagination","count","length","onPageChange","_","newPage","rowsPerPageOptions","onRowsPerPageChange","nextIconButtonProps","backIconButtonProps"],"sourceRoot":""}