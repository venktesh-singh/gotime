{"version":3,"file":"static/js/8379.6e0d41e0.chunk.js","mappings":"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","sources":["views/charts/ChartBarSimple.js","views/charts/ChartLineSimple.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor } from '@coreui/utils'\r\nimport { CChartBar } from '@coreui/react-chartjs'\r\n\r\nconst ChartBarSimple = props => {\r\n\r\n  const {\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverBackgroundColor),\r\n        label: label,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 1\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    return {\r\n      maintainAspectRatio: false,\r\n      legend: {\r\n        display: false\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      }\r\n    }\r\n  })()\r\n\r\n  // render\r\n  return (\r\n    <CChartBar\r\n      {...attributes}\r\n      datasets={defaultDatasets}\r\n      options={defaultOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartBarSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartBarSimple.defaultProps = {\r\n  backgroundColor: 'rgba(0,0,0,.2)',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartBarSimple\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { getColor, deepObjectsMerge } from '@coreui/utils'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\n\r\nconst ChartLineSimple = props => {\r\n\r\n  const {\r\n    borderColor,\r\n    backgroundColor,\r\n    pointHoverBackgroundColor,\r\n    dataPoints,\r\n    label,\r\n    pointed,\r\n    ...attributes\r\n  } = props\r\n\r\n  const pointHoverColor = (()=>{\r\n    if (pointHoverBackgroundColor) {\r\n      return pointHoverBackgroundColor\r\n    } else if (backgroundColor !== 'transparent') {\r\n      return backgroundColor\r\n    }\r\n    return borderColor\r\n  })()\r\n\r\n  const defaultDatasets = (()=>{\r\n    return [\r\n      {\r\n        data: dataPoints,\r\n        borderColor: getColor(borderColor),\r\n        backgroundColor: getColor(backgroundColor),\r\n        pointBackgroundColor: getColor(pointHoverColor),\r\n        pointHoverBackgroundColor: getColor(pointHoverColor),\r\n        label\r\n      }\r\n    ]\r\n  })()\r\n\r\n  const pointedOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [\r\n          {\r\n            offset: true,\r\n            gridLines: {\r\n              color: 'transparent',\r\n              zeroLineColor: 'transparent'\r\n            },\r\n            ticks: {\r\n              fontSize: 2,\r\n              fontColor: 'transparent'\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            display: false,\r\n            ticks: {\r\n              display: false,\r\n              min: Math.min.apply(Math, dataPoints) - 5,\r\n              max: Math.max.apply(Math, dataPoints) + 5\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 1\r\n        },\r\n        point: {\r\n          radius: 4,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const straightOptions = (()=>{\r\n    return {\r\n      scales: {\r\n        xAxes: [{\r\n          display: false\r\n        }],\r\n        yAxes: [{\r\n          display: false\r\n        }]\r\n      },\r\n      elements: {\r\n        line: {\r\n          borderWidth: 2\r\n        },\r\n        point: {\r\n          radius: 0,\r\n          hitRadius: 10,\r\n          hoverRadius: 4\r\n        }\r\n      }\r\n    }\r\n  })()\r\n\r\n  const defaultOptions = (()=>{\r\n    const options = pointed ? pointedOptions : straightOptions\r\n      return Object.assign({}, options, {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n          display: false\r\n        }\r\n      })\r\n  })()\r\n\r\n  const computedDatasets = (() => {\r\n    return deepObjectsMerge(defaultDatasets, attributes.datasets || {})\r\n  })()\r\n\r\n  const computedOptions = (() => {\r\n    return deepObjectsMerge(defaultOptions, attributes.options || {})\r\n  })()\r\n\r\n  // render\r\n\r\n  return (\r\n    <CChartLine\r\n      {...attributes}\r\n      datasets={computedDatasets}\r\n      options={computedOptions}\r\n      labels={label}\r\n    />\r\n  )\r\n}\r\n\r\nChartLineSimple.propTypes = {\r\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n  className: PropTypes.string,\r\n  //\r\n  borderColor: PropTypes.string,\r\n  backgroundColor: PropTypes.string,\r\n  pointHoverBackgroundColor: PropTypes.string,\r\n  dataPoints: PropTypes.array,\r\n  label: PropTypes.string,\r\n  pointed: PropTypes.bool\r\n};\r\n\r\nChartLineSimple.defaultProps = {\r\n  borderColor: 'rgba(255,255,255,.55)',\r\n  backgroundColor: 'transparent',\r\n  dataPoints: [10, 22, 34, 46, 58, 70, 46, 23, 45, 78, 34, 12],\r\n  label: 'Sales'\r\n};\r\n\r\nexport default ChartLineSimple\r\n","import React from 'react'\r\nimport {\r\n  CWidgetDropdown,\r\n  CRow,\r\n  CCol,\r\n  CDropdown,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdownToggle\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport ChartLineSimple from '../charts/ChartLineSimple'\r\nimport ChartBarSimple from '../charts/ChartBarSimple'\r\n\r\nconst WidgetsDropdown = () => {\r\n  // render\r\n  return (\r\n    <CRow>\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-primary\"\r\n          header=\"9.823\"\r\n          text=\"Members online\"\r\n          footerSlot={\r\n            <ChartLineSimple\r\n              pointed\r\n              className=\"c-chart-wrapper mt-3 mx-3\"\r\n              style={{height: '70px'}}\r\n              dataPoints={[65, 59, 84, 84, 51, 55, 40]}\r\n              pointHoverBackgroundColor=\"primary\"\r\n              label=\"Members\"\r\n              labels=\"months\"\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle color=\"transparent\">\r\n              <CIcon name=\"cil-settings\"/>\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Action</CDropdownItem>\r\n              <CDropdownItem>Another action</CDropdownItem>\r\n              <CDropdownItem>Something else here...</CDropdownItem>\r\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-info\"\r\n          header=\"9.823\"\r\n          text=\"Members online\"\r\n          footerSlot={\r\n            <ChartLineSimple\r\n              pointed\r\n              className=\"mt-3 mx-3\"\r\n              style={{height: '70px'}}\r\n              dataPoints={[1, 18, 9, 17, 34, 22, 11]}\r\n              pointHoverBackgroundColor=\"info\"\r\n              options={{ elements: { line: { tension: 0.00001 }}}}\r\n              label=\"Members\"\r\n              labels=\"months\"\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle caret={false} color=\"transparent\">\r\n              <CIcon name=\"cil-location-pin\"/>\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Action</CDropdownItem>\r\n              <CDropdownItem>Another action</CDropdownItem>\r\n              <CDropdownItem>Something else here...</CDropdownItem>\r\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-warning\"\r\n          header=\"9.823\"\r\n          text=\"Members online\"\r\n          footerSlot={\r\n            <ChartLineSimple\r\n              className=\"mt-3\"\r\n              style={{height: '70px'}}\r\n              backgroundColor=\"rgba(255,255,255,.2)\"\r\n              dataPoints={[78, 81, 80, 45, 34, 12, 40]}\r\n              options={{ elements: { line: { borderWidth: 2.5 }}}}\r\n              pointHoverBackgroundColor=\"warning\"\r\n              label=\"Members\"\r\n              labels=\"months\"\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle color=\"transparent\">\r\n              <CIcon name=\"cil-settings\"/>\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Action</CDropdownItem>\r\n              <CDropdownItem>Another action</CDropdownItem>\r\n              <CDropdownItem>Something else here...</CDropdownItem>\r\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n\r\n      <CCol sm=\"6\" lg=\"3\">\r\n        <CWidgetDropdown\r\n          color=\"gradient-danger\"\r\n          header=\"9.823\"\r\n          text=\"Members online\"\r\n          footerSlot={\r\n            <ChartBarSimple\r\n              className=\"mt-3 mx-3\"\r\n              style={{height: '70px'}}\r\n              backgroundColor=\"rgb(250, 152, 152)\"\r\n              label=\"Members\"\r\n              labels=\"months\"\r\n            />\r\n          }\r\n        >\r\n          <CDropdown>\r\n            <CDropdownToggle caret className=\"text-white\" color=\"transparent\">\r\n              <CIcon name=\"cil-settings\"/>\r\n            </CDropdownToggle>\r\n            <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n              <CDropdownItem>Action</CDropdownItem>\r\n              <CDropdownItem>Another action</CDropdownItem>\r\n              <CDropdownItem>Something else here...</CDropdownItem>\r\n              <CDropdownItem disabled>Disabled action</CDropdownItem>\r\n            </CDropdownMenu>\r\n          </CDropdown>\r\n        </CWidgetDropdown>\r\n      </CCol>\r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default WidgetsDropdown\r\n"],"names":["ChartBarSimple","props","backgroundColor","pointHoverBackgroundColor","dataPoints","label","attributes","pointed","_objectWithoutProperties","_excluded","defaultDatasets","data","getColor","barPercentage","categoryPercentage","defaultOptions","maintainAspectRatio","legend","display","scales","xAxes","yAxes","_jsx","CChartBar","_objectSpread","datasets","options","labels","defaultProps","ChartLineSimple","borderColor","pointHoverColor","pointBackgroundColor","pointedOptions","offset","gridLines","color","zeroLineColor","ticks","fontSize","fontColor","min","Math","apply","max","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","straightOptions","Object","assign","computedDatasets","deepObjectsMerge","computedOptions","CChartLine","_jsxs","CRow","children","CCol","sm","lg","CWidgetDropdown","header","text","footerSlot","className","style","height","CDropdown","CDropdownToggle","CIcon","name","CDropdownMenu","placement","CDropdownItem","disabled","tension","caret"],"sourceRoot":""}