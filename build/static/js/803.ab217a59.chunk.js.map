{"version":3,"file":"static/js/803.ab217a59.chunk.js","mappings":"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","sources":["views/slot/slot-list.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom';  \r\nimport {\r\n  Card,\r\n  Box,\r\n  Icon,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Paper,\r\n  TablePagination,\r\n  Button\r\n} from \"@mui/material\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport PreviewIcon from '@mui/icons-material/Preview';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport moment from \"moment\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n\r\nconst FlexBox = styled(Box)(() => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  margin: \"0 auto\",\r\n}));\r\n\r\nconst IMG = styled(\"img\")(() => ({\r\n  height: 45,\r\n  width:45,\r\n  borderRadius: \"4px\",\r\n}));\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    minWidth: '1000',\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n      \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0, fontSize: '1rem' } },\r\n    },\r\n    \"& tbody\": {\r\n      \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n  }\r\n));\r\n\r\n\r\nconst Slot = () => {\r\n  const [page, setPage] = useState(0);\r\n  const history = useHistory();\r\n  const [dataList, setDataList] = useState([]);\r\n \r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n      setPage(newPage);\r\n  };  \r\n  const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n  };\r\n  \r\n  const paginationta =  useSelector(state => state?.dataList);\r\n  console.log(\"Sia User Data\", dataList);    \r\n    fetch('https://go-time.onrender.com/api/slot/allslots')        \r\n    .then(response => {\r\n      if (!response.ok) {  \r\n        throw new Error('Error: ' + response.status);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then(data => {\r\n      setDataList(data);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching User data:', error);\r\n    });\r\n\r\n    const handleButtonClick = () => {\r\n      // Navigate forward to the next page\r\n      history.goForward()\r\n    }; \r\n\r\n  return (\r\n    <Container>\r\n      \r\n      <Button\r\n        sx={{\r\n          mb: 2,\r\n          pl: 1,\r\n          '&:hover': {\r\n            backgroundColor: 'primary.main',\r\n            color:'#fff'\r\n          },\r\n        }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        component={Link}\r\n        to=\"/slot/slot-add\"\r\n      >\r\n        <AddIcon aria-label=\"AddIcon\"   aria-haspopup=\"true\"/>\r\n        Add New Slot\r\n      </Button>\r\n      \r\n      <TableContainer component={Paper} sx={{ px: 0 }}>\r\n        <Card sx={{ px: 0, py: 0 }} elevation={1}>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <StyledTable>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>S.No.</TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>Sport Name</TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>Start Time</TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>End Time</TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>Date</TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>Action</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {dataList?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((subscriber, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell align=\"center\">{index + 1}</TableCell>\r\n                    <TableCell align=\"center\">{subscriber?.sport}</TableCell>\r\n                    <TableCell align=\"center\">{moment(subscriber?.startTime, 'HH:mm').format('HH:mm')}   </TableCell>\r\n                    <TableCell align=\"center\">{moment(subscriber?.endTime, 'HH:mm').format('HH:mm')}</TableCell>\r\n                    <TableCell align=\"center\">{moment(subscriber?.createdAt).format('MMMM Do YYYY')}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                    \r\n                      <Link sx={{ m: 0.5 }} variant=\"contained\" to={{ pathname: \"/slot/slot-detail\", state: { subscriber }}} name=\"Slot Detail\" >\r\n                        <PreviewIcon\r\n                            aria-label=\"PreviewIcon\"\r\n                            aria-haspopup=\"true\">\r\n                            <Icon color=\"primary\">view</Icon>\r\n                        </PreviewIcon>\r\n                      </Link>     \r\n                      <Link sx={{ m: 0.5 }} variant=\"contained\" to={{ pathname: \"/slot/slot-edit\", state: { subscriber }}} name=\"Slot Edit\">\r\n                        <EditIcon\r\n                          aria-label=\"EditIcon\"   \r\n                          aria-haspopup=\"true\"\r\n                        >\r\n                          <Icon color=\"primary\">edit</Icon>\r\n                        </EditIcon>\r\n                      </Link>  \r\n                      <DeleteIcon\r\n                        aria-label=\"delete\"\r\n                        aria-haspopup=\"true\"\r\n                        //onClick={() => deleteUsers(subscriber?._id)}\r\n                      >\r\n                        <Icon color=\"error\">close</Icon>\r\n                      </DeleteIcon>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </StyledTable>\r\n            <TablePagination\r\n                sx={{ px: 2 }}  \r\n                page={page}\r\n                component=\"div\"\r\n                rowsPerPage={rowsPerPage}\r\n                count={paginationta?.length}  \r\n                onPageChange={handleChangePage}\r\n                rowsPerPageOptions={[10, 20, 30]}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\r\n                backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\r\n            />\r\n          </Box>\r\n        </Card>  \r\n      </TableContainer>\r\n      </Container>\r\n  );\r\n};\r\n\r\nexport default Slot;  \r\n\r\n\r\n"],"names":["Container","styled","_ref","_ref2","theme","margin","_defineProperty","breakpoints","down","marginBottom","StyledTable","Box","display","justifyContent","alignItems","height","width","borderRadius","Table","minWidth","whiteSpace","paddingLeft","paddingRight","fontSize","textTransform","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","useHistory","_useState4","dataList","setDataList","_useState5","_useState6","rowsPerPage","setRowsPerPage","paginationta","useSelector","state","console","log","fetch","then","response","ok","Error","status","json","data","catch","error","_jsxs","children","Button","sx","mb","pl","backgroundColor","color","variant","component","Link","to","_jsx","AddIcon","TableContainer","Paper","px","Card","py","elevation","overflow","TableHead","TableRow","TableCell","align","fontWeight","TableBody","slice","map","subscriber","index","sport","moment","startTime","format","endTime","createdAt","m","pathname","name","PreviewIcon","Icon","EditIcon","DeleteIcon","TablePagination","count","length","onPageChange","_","newPage","rowsPerPageOptions","onRowsPerPageChange","event","target","value","nextIconButtonProps","backIconButtonProps"],"sourceRoot":""}