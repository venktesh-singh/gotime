{"version":3,"file":"static/js/1915.84a54483.chunk.js","mappings":"4NAUMA,GAAkBC,EAAAA,EAAAA,OAAK,kBAAM,+BAAuC,IA4J1E,UA1JkB,WAChB,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAwBT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA5BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA8Bb,EAAAA,EAAAA,WAAS,GAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAE1BG,QAAQC,IAAI,aAAqB,OAARf,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,OACnCC,EAAAA,EAAAA,YAAU,WACRC,MAAM,4CACHC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,UAAYF,EAASG,QAEvC,OAAOH,EAASI,MAClB,IACCL,MAAK,SAACH,GACLf,EAAYe,EACd,IACCS,OAAM,SAACC,GACNZ,QAAQY,MAAM,4BAA6BA,EAC7C,GACJ,GAAG,IAEH,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAZ,EAAAJ,EAAAiB,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACG,OAAnBhC,GAAa,GAAM8B,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMnB,MAAM,iDAADoB,OACuB9B,EAAI,WAAA8B,OAtBpC,KAuBjB,KAAD,EAFa,IAARlB,EAAQe,EAAAI,MAGAlB,GAAG,CAADc,EAAAE,KAAA,cACR,IAAIf,MAAM,UAAYF,EAASG,QAAQ,KAAD,SAAAY,EAAAE,KAAA,EAE3BjB,EAASI,OAAO,KAAD,EAA5BR,EAAImB,EAAAI,KACJN,EAAcjB,EAAKA,KACzBf,GAAY,SAACuC,GACX,OAAIC,MAAMC,QAAQF,GACV,GAANF,QAAAK,EAAAA,EAAAA,GAAWH,IAAYG,EAAAA,EAAAA,GAAKV,IAErBA,CAEX,IACAxB,GAAQ,SAACmC,GAAQ,OAAKA,EAAW,CAAC,IAClC/B,EArCmB,KAqCRoB,EAAYY,QAA2BV,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,iBAI9B,OAJ8BA,EAAAC,KAAA,GAIlD/B,GAAa,GAAO8B,EAAAY,OAAA,6BAAAZ,EAAAa,OAAA,GAAAhB,EAAA,yBAEvB,kBAzBc,OAAAJ,EAAAqB,MAAA,KAAAC,UAAA,KAqDf,OA1BAjC,EAAAA,EAAAA,YAAU,WACR,IAAMkC,EAAe,WACnB,IAAMC,EACJC,OAAOC,aAAeC,SAASC,gBAAgBJ,WAE/CG,SAASC,gBAAgBC,cACzBF,SAASG,KAAKD,cAKCL,KAHfG,SAASC,gBAAgBG,cAAgBN,OAAOO,cAIhDhD,IACCR,GAEDuB,GAEJ,EAIA,OAFA0B,OAAOQ,iBAAiB,SAAUV,GAE3B,WACLE,OAAOS,oBAAoB,SAAUX,EACvC,CACF,GAAG,CAACvC,EAASR,KAGX2D,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACxE,EAAe,KAEhBwE,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAF,UACHC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAAAH,UACHF,EAAAA,EAAAA,MAACM,EAAAA,GAAK,CAAAJ,SAAA,EACJC,EAAAA,EAAAA,KAACI,EAAAA,GAAW,CAAAL,SAAC,kBACbF,EAAAA,EAAAA,MAACQ,EAAAA,GAAS,CAAAN,SAAA,EACRF,EAAAA,EAAAA,MAAA,SAAOS,UAAU,yDAAwDP,SAAA,EACvEC,EAAAA,EAAAA,KAAA,SAAOM,UAAU,cAAaP,UAC5BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,cAAaP,UACzBC,EAAAA,EAAAA,KAACO,EAAAA,GAAK,CAACC,KAAK,kBAEdR,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,cAAaP,SAAC,WAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,cAAaP,SAAC,UAC5BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBAGRC,EAAAA,EAAAA,KAAA,SAAAD,UACa,OAARjE,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,OACTyB,MAAMC,QAAQ1C,EAASgB,OACvBhB,EAASgB,KAAK2D,KAAI,SAACC,EAAYC,GAAK,OACpCd,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,cAAaP,UACzBF,EAAAA,EAAAA,MAAA,OAAKS,UAAU,WAAUP,SAAA,CACtBW,EAAWE,iBACVZ,EAAAA,EAAAA,KAAA,OACEa,IAAKH,EAAWE,gBAChBN,UAAU,eACVQ,IAAKJ,EAAWK,SAGlBf,EAAAA,EAAAA,KAAA,OACEa,IAAI,kDACJP,UAAU,eACVQ,IAAI,iBAGRd,EAAAA,EAAAA,KAAA,QAAMM,UAAU,qCAGpBN,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKM,UAAU,mBAAkBP,SAC9BW,EAAWM,eAGhBhB,EAAAA,EAAAA,KAAA,MAAIM,UAAU,cAAaP,SAAEW,EAAWK,SACxCf,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,OAAKM,UAAU,WAAUP,SACtBW,EAAWO,oBAGhBjB,EAAAA,EAAAA,KAAA,MAAIM,UAAU,cAAaP,SACxBmB,IAAiB,OAAVR,QAAU,IAAVA,OAAU,EAAVA,EAAYS,WAAWC,OAC7B,mBAGJvB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKM,UAAU,mBAAkBP,SAAC,gBAClCC,EAAAA,EAAAA,KAAA,UAAAD,SAASW,EAAWW,UAAY,SAAW,iBArCtCV,EAuCJ,SAIZzE,IAAa8D,EAAAA,EAAAA,KAAA,OAAAD,SAAK,2BAOjC,C","sources":["views/dashboard/Dashboard.js"],"sourcesContent":["import React, { lazy, useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport moment from \"moment\";\r\nconst WidgetsDropdown = lazy(() => import(\"../widgets/WidgetsDropdown.js\"));\r\n\r\nconst Dashboard = () => {\r\n  const [dataList, setDataList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const ITEMS_PER_PAGE = 10;\r\n  console.log(\"Last Login\",dataList?.data);\r\n  useEffect(() => {\r\n    fetch(\"https://gotimeapi.onrender.com/api/user/\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Error: \" + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setDataList(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching User data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        `https://gotimeapi.onrender.com/api/user/?page=${page}&limit=${ITEMS_PER_PAGE}`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Error: \" + response.status);\r\n      }\r\n      const data = await response.json();\r\n      const newDataList = data.data;\r\n      setDataList((prevDataList) => {\r\n        if (Array.isArray(prevDataList)) {\r\n          return [...prevDataList, ...newDataList];\r\n        } else {\r\n          return newDataList;\r\n        }\r\n      });\r\n      setPage((prevPage) => prevPage + 1);\r\n      setHasMore(newDataList.length === ITEMS_PER_PAGE);\r\n    } catch (error) {\r\n      // Handle error\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const scrollTop =\r\n        window.pageYOffset || document.documentElement.scrollTop;\r\n      const scrollHeight =\r\n        document.documentElement.scrollHeight ||\r\n        document.body.scrollHeight;\r\n      const clientHeight =\r\n        document.documentElement.clientHeight || window.innerHeight;\r\n\r\n      if (\r\n        scrollHeight - scrollTop === clientHeight &&\r\n        hasMore &&\r\n        !isLoading\r\n      ) {\r\n        fetchData();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, [hasMore, isLoading]);\r\n\r\n  return (\r\n    <>\r\n      <WidgetsDropdown />\r\n\r\n      <CRow>\r\n        <CCol>\r\n          <CCard>\r\n            <CCardHeader>User & Lives</CCardHeader>\r\n            <CCardBody>\r\n              <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">\r\n                      <CIcon name=\"cil-people\" />\r\n                    </th>\r\n                    <th>Full Name</th>\r\n                    <th className=\"text-center\">Email</th>\r\n                    <th>Phone</th>\r\n                    <th className=\"text-center\">Date</th>\r\n                    <th>Activity</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {dataList?.data &&\r\n                      Array.isArray(dataList.data) &&\r\n                      dataList.data.map((subscriber, index) => (\r\n                      <tr key={index}>\r\n                        <td className=\"text-center\">\r\n                          <div className=\"c-avatar\">\r\n                            {subscriber.profile_picture ? (\r\n                              <img\r\n                                src={subscriber.profile_picture}\r\n                                className=\"c-avatar-img\"\r\n                                alt={subscriber.email}\r\n                              />\r\n                            ) : (\r\n                              <img\r\n                                src=\"https://i.pravatar.cc/150?u=a042581f4e29026704d\"\r\n                                className=\"c-avatar-img\"\r\n                                alt=\"Dummy Image\"\r\n                              />\r\n                            )}\r\n                            <span className=\"c-avatar-status bg-success\"></span>\r\n                          </div>\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"small text-muted\">\r\n                            {subscriber.full_name}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"text-center\">{subscriber.email}</td>\r\n                        <td>\r\n                          <div className=\"clearfix\">\r\n                            {subscriber.contact_number}\r\n                          </div>\r\n                        </td>\r\n                        <td className=\"text-center\">\r\n                          {moment(subscriber?.createdAt).format(\r\n                            \"MMMM Do YYYY\"\r\n                          )}\r\n                        </td>\r\n                        <td>\r\n                          <div className=\"small text-muted\">Last login</div>\r\n                          <strong>{subscriber.is_online ? 'Online' : 'Offline'}</strong>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n              {isLoading && <div>Loading...</div>}\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["WidgetsDropdown","lazy","_useState","useState","_useState2","_slicedToArray","dataList","setDataList","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","page","setPage","_useState7","_useState8","hasMore","setHasMore","console","log","data","useEffect","fetch","then","response","ok","Error","status","json","catch","error","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newDataList","wrap","_context","prev","next","concat","sent","prevDataList","Array","isArray","_toConsumableArray","prevPage","length","t0","finish","stop","apply","arguments","handleScroll","scrollTop","window","pageYOffset","document","documentElement","scrollHeight","body","clientHeight","innerHeight","addEventListener","removeEventListener","_jsxs","_Fragment","children","_jsx","CRow","CCol","CCard","CCardHeader","CCardBody","className","CIcon","name","map","subscriber","index","profile_picture","src","alt","email","full_name","contact_number","moment","createdAt","format","is_online"],"sourceRoot":""}