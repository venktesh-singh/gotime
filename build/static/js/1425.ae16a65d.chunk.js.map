{"version":3,"file":"static/js/1425.ae16a65d.chunk.js","mappings":"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","sources":["views/users/SimpleCard.jsx","views/users/edit-user.jsx"],"sourcesContent":["import { Card } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\n\r\nconst CardRoot = styled(Card)(() => ({\r\n  height: '100%',\r\n  padding: '20px 24px',\r\n}));\r\n\r\nconst CardTitle = styled('div')(({ subtitle }) => ({\r\n  fontSize: '1.2rem',\r\n  fontWeight: '500',\r\n  textTransform: 'capitalize',\r\n  marginBottom: !subtitle && '16px',\r\n}));\r\n\r\nconst SimpleCard = ({ children, title, subtitle, icon }) => {\r\n  return (\r\n    <CardRoot elevation={6}>\r\n      <CardTitle subtitle={subtitle}>{title}</CardTitle>\r\n      {subtitle && <Box sx={{ mb: 2 }}>{subtitle}</Box>}\r\n      {children}\r\n    </CardRoot>\r\n  );\r\n};\r\n\r\nexport default SimpleCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  Stack,\r\n  styled,\r\n} from '@mui/material';\r\nimport SimpleCard from './SimpleCard';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator';\r\nimport { updateUser } from 'src/redux/actions/userAction';\r\nimport { getUserData } from 'src/redux/selectors/userSelectors';\r\n  \r\nconst StyledTextField = styled(TextValidator)(({ theme }) => ({\r\n  width: '100%',\r\n  marginBottom: '16px',\r\n}));\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n}));\r\n\r\nconst EditUser = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const userData = location.state;\r\n  const UserEdit = userData.subscriber\r\n  \r\n\r\n  const [updatedData, setUpdatedData] = useState({\r\n    _id : UserEdit._id || '',  \r\n    full_name: UserEdit.full_name || '',\r\n    height_feet: UserEdit.height_feet || '',\r\n    height_inches: UserEdit.height_inches || '',\r\n    weight: UserEdit.weight || '',\r\n    age : UserEdit.age || '',\r\n    contact_number: UserEdit.contact_number || '',\r\n    amount : UserEdit.amount || '',\r\n  });\r\n\r\n  //console.log('user Edit Data:', updatedData); \r\n\r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule('isNameNotEmpty', (value) => {\r\n      if (value.trim().length === 0) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n\r\n    return () => {\r\n      ValidatorForm.removeValidationRule('isNameNotEmpty');\r\n    };\r\n  }, []);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUpdatedData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(`https://gotimeapi.onrender.com/api/user`, {     \r\n        method: 'post',        \r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(updatedData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Update successful\r\n        dispatch(updateUser(updatedData));\r\n        history.push(\"/users/user-list\")\r\n      } else {\r\n        // Update failed\r\n        // Handle error scenario\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating data:', error);\r\n      // Handle error scenario\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    history.goBack(); \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n            <Button\r\n                sx={{ mb: 2, pl: 1 }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleButtonClick}\r\n            >\r\n                <ArrowBackIcon aria-label=\"ArrowBackIcon\" aria-haspopup=\"true\" />\r\n                Back\r\n            </Button>\r\n\r\n        <Stack spacing={3}>\r\n        <SimpleCard title=\"Add New User\">\r\n          <ValidatorForm onSubmit={handleSubmit} onError={() => null}>\r\n            <Grid container spacing={6}>\r\n              <Grid item lg={6} md={6} sm={12} xs={12} sx={{ mt: 2 }}>\r\n                <StyledTextField\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"full_name\"\r\n                  id=\"full_name\"\r\n                  value={updatedData.full_name}\r\n                  onChange={handleInputChange}\r\n                  label=\"Full Name\"\r\n                  validators={['required', 'isNameNotEmpty']}\r\n                  errorMessages={['This field is required', 'Please enter a valid full name']}\r\n                />\r\n                <StyledTextField\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"height_feet\"\r\n                  id=\"height_feet\"\r\n                  value={updatedData.height_feet}\r\n                  onChange={handleInputChange}\r\n                  label=\"Height in feet\"\r\n                  validators={['required', 'isNameNotEmpty']}\r\n                  errorMessages={['This field is required', 'Please enter a valid Height in feet']}\r\n                />\r\n                <StyledTextField\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"height_inches\"\r\n                  id=\"height_inches\"\r\n                  value={updatedData.height_inches}\r\n                  onChange={handleInputChange}\r\n                  label=\"Height In inches\"\r\n                  validators={['required', 'isNameNotEmpty']}\r\n                  errorMessages={['This field is required', 'Please enter a valid Height in inches']}\r\n                />\r\n                <StyledTextField\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"weight\"\r\n                  id=\"weight\"\r\n                  label=\"Weight\"\r\n                  value={updatedData.weight}\r\n                  onChange={handleInputChange}\r\n                  validators={['required', 'isNameNotEmpty']}\r\n                  errorMessages={['This field is required', 'Please enter a valid weight']}\r\n                />\r\n                <StyledTextField\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"contact_number\"\r\n                  id=\"contact_number\"\r\n                  label=\"Phone Number\"\r\n                  value={updatedData.contact_number}\r\n                  onChange={handleInputChange}\r\n                  validators={['required', 'isNumber']}\r\n                  errorMessages={['This field is required', 'Please enter a valid contact number']}\r\n                />\r\n                <StyledTextField\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"age\"\r\n                  id=\"age\"\r\n                  label=\"Age in Year\"\r\n                  value={updatedData.age}  \r\n                  onChange={handleInputChange}\r\n                  validators={['required', 'isNumber']}\r\n                  errorMessages={['This field is required', 'Please enter a valid Age']}\r\n                />\r\n                <StyledTextField\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  name=\"amount\"\r\n                  id=\"age\"\r\n                  label=\"Amount\"\r\n                  value={updatedData.amount}  \r\n                  onChange={handleInputChange}\r\n                  validators={['required', 'isNumber']}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n              <SendIcon aria-label=\"send\" aria-haspopup=\"true\" />\r\n              Update User\r\n            </Button>\r\n          </ValidatorForm>\r\n          </SimpleCard>\r\n        </Stack>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n"],"names":["CardRoot","styled","Card","height","padding","CardTitle","_ref","fontSize","fontWeight","textTransform","marginBottom","subtitle","_ref2","children","title","icon","_jsxs","elevation","_jsx","Box","sx","mb","StyledTextField","TextValidator","theme","width","Container","margin","dispatch","useDispatch","history","useHistory","UserEdit","useLocation","state","subscriber","_useState","useState","_id","full_name","height_feet","height_inches","weight","age","contact_number","amount","_useState2","_slicedToArray","updatedData","setUpdatedData","useEffect","ValidatorForm","addValidationRule","value","trim","length","removeValidationRule","handleInputChange","event","_event$target","target","name","prevState","_objectSpread","_defineProperty","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","fetch","method","headers","body","JSON","stringify","sent","ok","updateUser","push","t0","console","error","stop","_x","apply","arguments","Button","pl","variant","color","onClick","goBack","ArrowBackIcon","Stack","spacing","SimpleCard","onSubmit","onError","Grid","container","item","lg","md","sm","xs","mt","type","fullWidth","size","id","onChange","label","validators","errorMessages","SendIcon"],"sourceRoot":""}