{"version":3,"file":"static/js/3061.5c3d0a2e.chunk.js","mappings":"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","sources":["views/event/event-list.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CSVLink } from 'react-csv';\r\nimport {\r\n  Card,\r\n  Box,\r\n  Icon,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n  Paper,\r\n  TablePagination,\r\n  Button,\r\n  TextField\r\n} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport PreviewIcon from '@mui/icons-material/Preview';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport moment from 'moment';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n\r\nconst StyledTextField = styled(TextField)(() => ({\r\n  marginBottom: '16px',\r\n}));\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  minWidth: '1000',\r\n  whiteSpace: 'pre',\r\n  '& thead': {\r\n    '& tr': { '& th': { paddingLeft: 0, paddingRight: 0, fontSize: '1rem' } },\r\n  },\r\n  '& tbody': {\r\n    '& tr': { '& td': { paddingLeft: 0, textTransform: 'capitalize' } },\r\n  },\r\n}));\r\n\r\nconst EventList = () => {\r\n  const [page, setPage] = useState(0);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const handleSearchQueryChange = (event) => {\r\n    const query = event.target.value;\r\n    setSearchQuery(query);\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch('https://gotimeapi.onrender.com/api/event/get')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Error: ' + response.status);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setDataList(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching Event data:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleDownloadCSV = () => {\r\n    if (!dataList || !dataList.data) {\r\n      return null;\r\n    }\r\n  \r\n    // Prepare the CSV data\r\n    const csvData = dataList.data.map((subscriber,index) => ({\r\n      SNo: index+1,\r\n      'Event Name': subscriber.event_name,\r\n      Description: subscriber.description,\r\n      'Start Time': subscriber?.start_time,\r\n      'End Time': subscriber?.end_time,\r\n    }));\r\n  \r\n    // Define the CSV headers\r\n    const headers = [\r\n      { label: 'S.No.', key: 'SNo' },\r\n      { label: 'Event Name', key: 'Event Name' },\r\n      { label: 'Description', key: 'Description' },\r\n      { label: 'Start Time', key: 'Start Time' },\r\n      { label: 'End Time', key: 'End Time' },\r\n      { label: 'Date', key: 'Date' },\r\n    ];\r\n  \r\n    // Trigger the CSV download\r\n    const csvOptions = {\r\n      filename: 'event_data.csv',\r\n      headers: headers,\r\n    };\r\n  \r\n    return (\r\n      <CSVLink data={csvData} {...csvOptions} style={{ color: '#fff',textDecoration:'none' }}>\r\n        Download CSV\r\n      </CSVLink>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Button\r\n        sx={{\r\n          mb: 2,\r\n          pl: 1,\r\n          '&:hover': {\r\n            backgroundColor: 'primary.main',\r\n            color: '#fff',\r\n          },\r\n        }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        component={Link}\r\n        to=\"/event/event-add\"\r\n      >\r\n        <AddIcon aria-label=\"AddIcon\" aria-haspopup=\"true\" />\r\n        Add New Event\r\n      </Button>\r\n      <StyledTextField\r\n        size=\"small\"\r\n        type=\"text\"\r\n        value={searchQuery}\r\n        onChange={handleSearchQueryChange}\r\n        placeholder=\"Search by event name\"\r\n        style={{ float: 'right',backgroundColor:'#fff' }}\r\n      />\r\n\r\n      <TableContainer component={Paper} sx={{ px: 0 }}>\r\n        <Card sx={{ px: 0, py: 0 }} elevation={1}>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <StyledTable>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>\r\n                    S.No.\r\n                  </TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>\r\n                    Event Name\r\n                  </TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>\r\n                    Description\r\n                  </TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>\r\n                    Start Time\r\n                  </TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>\r\n                    End Time\r\n                  </TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>\r\n                    Date\r\n                  </TableCell>\r\n                  <TableCell align=\"center\" sx={{ fontWeight: 'bold' }}>\r\n                    Action\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {dataList?.data\r\n                  ?.filter((subscriber) =>\r\n                    subscriber.event_name\r\n                      .toLowerCase()\r\n                      .includes(searchQuery.toLowerCase())\r\n                  )\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((subscriber, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell align=\"center\">{index + 1}</TableCell>\r\n                      <TableCell align=\"center\">{subscriber.event_name}</TableCell>\r\n                      <TableCell align=\"center\">{subscriber.description}</TableCell>\r\n                      <TableCell align=\"center\">{subscriber.start_time}</TableCell>\r\n                      <TableCell align=\"center\">{subscriber.end_time}</TableCell>\r\n                      <TableCell align=\"center\">\r\n                        {moment(subscriber?.createdAt).format('MMMM Do YYYY')}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <Link\r\n                          sx={{ m: 0.5 }}\r\n                          variant=\"contained\"\r\n                          to={{ pathname: '/event/event-detail', state: { subscriber } }}\r\n                          name=\"Event Details\"\r\n                        >\r\n                          <PreviewIcon aria-label=\"PreviewIcon\" aria-haspopup=\"true\">\r\n                            <Icon color=\"primary\">view</Icon>\r\n                          </PreviewIcon>\r\n                        </Link>\r\n                        <Link\r\n                          sx={{ m: 0.5 }}\r\n                          variant=\"contained\"\r\n                          to={{ pathname: '/event/event-edit', state: { subscriber } }}\r\n                          name=\"Event Edit\"\r\n                        >\r\n                          <EditIcon aria-label=\"EditIcon\" aria-haspopup=\"true\">\r\n                            <Icon color=\"primary\">edit</Icon>\r\n                          </EditIcon>\r\n                        </Link>\r\n                        <DeleteIcon\r\n                          aria-label=\"delete\"\r\n                          aria-haspopup=\"true\"\r\n                          //onClick={() => deleteUsers(subscriber?._id)}\r\n                        >\r\n                          <Icon color=\"error\">close</Icon>\r\n                        </DeleteIcon>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </StyledTable>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', px: 2 }}>  \r\n              <Button variant=\"contained\" >\r\n                  {handleDownloadCSV()}\r\n              </Button>\r\n            <TablePagination\r\n              sx={{ px: 2 }}\r\n              page={page}\r\n              component=\"div\"\r\n              rowsPerPage={rowsPerPage}\r\n              count={dataList?.data?.length || 0}\r\n              onPageChange={handleChangePage}\r\n              rowsPerPageOptions={[10, 20, 30]}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              nextIconButtonProps={{ 'aria-label': 'Next Page' }}\r\n              backIconButtonProps={{ 'aria-label': 'Previous Page' }}\r\n            />\r\n            </Box>\r\n          </Box>\r\n        </Card>\r\n      </TableContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EventList;\r\n"],"names":["Container","styled","_ref","_ref2","theme","margin","_defineProperty","breakpoints","down","marginBottom","StyledTextField","TextField","StyledTable","Table","minWidth","whiteSpace","paddingLeft","paddingRight","fontSize","textTransform","_dataList$data","_dataList$data2","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","dataList","setDataList","_useState5","_useState6","rowsPerPage","setRowsPerPage","_useState7","_useState8","searchQuery","setSearchQuery","useEffect","fetch","then","response","ok","Error","status","json","data","catch","error","console","_jsxs","children","Button","sx","mb","pl","backgroundColor","color","variant","component","Link","to","_jsx","AddIcon","size","type","value","onChange","event","query","target","placeholder","style","float","TableContainer","Paper","px","Card","py","elevation","Box","width","overflow","TableHead","TableRow","TableCell","align","fontWeight","TableBody","filter","subscriber","event_name","toLowerCase","includes","slice","map","index","description","start_time","end_time","moment","createdAt","format","m","pathname","state","name","PreviewIcon","Icon","EditIcon","DeleteIcon","display","justifyContent","alignItems","csvData","SNo","Description","csvOptions","filename","headers","label","key","CSVLink","_objectSpread","textDecoration","handleDownloadCSV","TablePagination","count","length","onPageChange","_","newPage","rowsPerPageOptions","onRowsPerPageChange","nextIconButtonProps","backIconButtonProps"],"sourceRoot":""}