{"version":3,"file":"static/js/3304.57d3b3ce.chunk.js","mappings":"iNAGMA,EAAW,SAAAC,GACf,IACEC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACGC,GAAIC,EAAAA,EAAAA,GACLJ,EAAKK,GAEHC,EAAOL,EAAI,2CAAAM,OAA8CN,GAASD,EAAMM,KAE9E,OACEE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCF,EAAAA,EAAAA,KAACG,EAAAA,IAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAT,GAAI,IACRG,KAAMA,EACNO,IAAI,sBACJC,OAAO,SACPL,UAAU,qBAAoBC,UAE9BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,aAAYC,SAAGR,GAAQ,aAIhD,EAEA,EAAea,EAAAA,KAAWhB,E,0FCqJ1B,UAlKe,WACb,IAAAiB,EAA8BD,EAAAA,SAAe,IAAGE,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAzCG,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAE1B,OACEI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAZ,SAAA,EACEW,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CAAAb,SAAA,EACHF,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,KAAKC,GAAG,IAAGhB,UAClBW,EAAAA,EAAAA,MAACM,EAAAA,GAAK,CAAAjB,SAAA,EACJW,EAAAA,EAAAA,MAACO,EAAAA,GAAW,CAAAlB,SAAA,CAAC,UAEXF,EAAAA,EAAAA,KAACT,EAAAA,EAAQ,CAACE,KAAK,eAEjBoB,EAAAA,EAAAA,MAACQ,EAAAA,GAAS,CAAAnB,SAAA,EACRF,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CAACC,MAAM,UAASrB,SAAC,kDAGxBF,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CAACC,MAAM,YAAWrB,SAAC,oDAG1BF,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CAACC,MAAM,UAASrB,SAAC,kDAGxBF,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CAACC,MAAM,SAAQrB,SAAC,iDAGvBF,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CAACC,MAAM,UAASrB,SAAC,kDAGxBF,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CAACC,MAAM,OAAMrB,SAAC,+CAGrBF,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CAACC,MAAM,QAAOrB,SAAC,gDAGtBF,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CAACC,MAAM,OAAMrB,SAAC,uDAM3BF,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,KAAKC,GAAG,IAAGhB,UAClBW,EAAAA,EAAAA,MAACM,EAAAA,GAAK,CAAAjB,SAAA,EACJW,EAAAA,EAAAA,MAACO,EAAAA,GAAW,CAAAlB,SAAA,CAAC,UAEXW,EAAAA,EAAAA,MAAA,SAAAX,SAAA,CAAO,SAAKF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,gBAAkB,2BAEtCW,EAAAA,EAAAA,MAACQ,EAAAA,GAAS,CAAAnB,SAAA,EACRW,EAAAA,EAAAA,MAACS,EAAAA,GAAM,CAACC,MAAM,UAASrB,SAAA,CACS,oCAE9BF,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACF,UAAU,aAAYC,SAAC,oBAAuB,qCAGvDW,EAAAA,EAAAA,MAACS,EAAAA,GAAM,CAACC,MAAM,YAAWrB,SAAA,CACO,sCAE9BF,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACF,UAAU,aAAYC,SAAC,oBAAuB,qCAGvDW,EAAAA,EAAAA,MAACS,EAAAA,GAAM,CAACC,MAAM,UAASrB,SAAA,CACS,oCAE9BF,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACF,UAAU,aAAYC,SAAC,oBAAuB,qCAGvDW,EAAAA,EAAAA,MAACS,EAAAA,GAAM,CAACC,MAAM,SAAQrB,SAAA,CACU,mCAE9BF,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACF,UAAU,aAAYC,SAAC,oBAAuB,qCAGvDW,EAAAA,EAAAA,MAACS,EAAAA,GAAM,CAACC,MAAM,UAASrB,SAAA,CACS,oCAE9BF,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACF,UAAU,aAAYC,SAAC,oBAAuB,qCAGvDW,EAAAA,EAAAA,MAACS,EAAAA,GAAM,CAACC,MAAM,OAAMrB,SAAA,CACY,iCAE9BF,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACF,UAAU,aAAYC,SAAC,oBAAuB,qCAGvDW,EAAAA,EAAAA,MAACS,EAAAA,GAAM,CAACC,MAAM,QAAOrB,SAAA,CACW,kCAE9BF,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACF,UAAU,aAAYC,SAAC,oBAAuB,qCAGvDW,EAAAA,EAAAA,MAACS,EAAAA,GAAM,CAACC,MAAM,OAAMrB,SAAA,CACY,iCAE9BF,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACF,UAAU,aAAYC,SAAC,oBAAuB,gDAO/DW,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CAAAb,SAAA,EACHF,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,KAAKC,GAAG,IAAGhB,UAClBW,EAAAA,EAAAA,MAACM,EAAAA,GAAK,CAAAjB,SAAA,EACJW,EAAAA,EAAAA,MAACO,EAAAA,GAAW,CAAAlB,SAAA,CAAC,UAEXF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,4BAETF,EAAAA,EAAAA,KAACqB,EAAAA,GAAS,CAAAnB,UACRW,EAAAA,EAAAA,MAACS,EAAAA,GAAM,CAACC,MAAM,UAASrB,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAC,gBAC9BF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,mMAKHF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAGC,UAAU,OAAMC,SAAC,mGAO5BF,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,KAAKC,GAAG,IAAGhB,UAClBW,EAAAA,EAAAA,MAACM,EAAAA,GAAK,CAAAjB,SAAA,EACJW,EAAAA,EAAAA,MAACO,EAAAA,GAAW,CAAAlB,SAAA,CAAC,UAEXF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,oBAETW,EAAAA,EAAAA,MAACQ,EAAAA,GAAS,CAAAnB,SAAA,EACRF,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CACLC,MAAM,OACNC,aAAW,EAAAtB,SACZ,gCAGDW,EAAAA,EAAAA,MAACS,EAAAA,GAAM,CACLC,MAAM,UACNE,KAAMd,EACNa,aAAW,EACXE,aAAcd,EAAWV,SAAA,CAC1B,uBACsBS,EAAQ,aAC7BX,EAAAA,EAAAA,KAAC2B,EAAAA,GAAS,CACRC,SAAO,EACPL,MAAM,UACNM,MAAyB,GAAlBC,OAAOnB,GACdoB,KAAK,KACL9B,UAAU,aAIdD,EAAAA,EAAAA,KAACgC,EAAAA,GAAO,CAACT,MAAM,UAAUU,QAAS,kBAAMrB,EAAW,GAAG,EAACV,SAAC,6BAStE,C","sources":["reusable/DocsLink.js","views/notifications/alerts/Alerts.js"],"sourcesContent":["import React from 'react'\r\nimport { CLink } from '@coreui/react'\r\n\r\nconst DocsLink = props => {\r\n  const {\r\n    name,\r\n    text,\r\n    ...rest\r\n  } = props\r\n\r\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\r\n\r\n  return (\r\n    <div className=\"card-header-actions\">\r\n      <CLink \r\n        {...rest}\r\n        href={href}\r\n        rel=\"noreferrer noopener\" \r\n        target=\"_blank\" \r\n        className=\"card-header-action\"  \r\n      >\r\n        <small className=\"text-muted\">{ text || 'docs' }</small>\r\n      </CLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(DocsLink)","import React from 'react'\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CLink,\r\n  CProgress,\r\n  CRow\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\n\r\nconst Alerts = () => {\r\n  const [visible, setVisible] = React.useState(10)\r\n\r\n  return (\r\n    <>\r\n      <CRow>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Alerts\r\n              <DocsLink name=\"CAlert\"/>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CAlert color=\"primary\">\r\n                This is a primary alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"secondary\">\r\n                This is a secondary alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"success\">\r\n                This is a success alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"danger\">\r\n                This is a danger alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"warning\">\r\n                This is a warning alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"info\">\r\n                This is a info alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"light\">\r\n                This is a light alert — check it out!\r\n              </CAlert>\r\n              <CAlert color=\"dark\">\r\n                This is a dark alert — check it out!\r\n              </CAlert>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Alerts\r\n              <small> use <code>.alert-link</code> to provide links</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CAlert color=\"primary\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a primary alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"secondary\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a secondary alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"success\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a success alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"danger\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a danger alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"warning\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a warning alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"info\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a info alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"light\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a light alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n              <CAlert color=\"dark\">\r\n                {/*eslint-disable-next-line*/}\r\n                This is a dark alert with&nbsp;\r\n                <CLink className=\"alert-link\">an example link</CLink>.\r\n                Give it a click if you like.\r\n              </CAlert>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Alerts\r\n              <small> additional content</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CAlert color=\"success\">\r\n                <h4 className=\"alert-heading\">Well done!</h4>\r\n                <p>\r\n                  Aww yeah, you successfully read this important alert message. This example text is going\r\n                  to run a bit longer so that you can see how spacing within an alert works with this kind\r\n                  of content.\r\n                </p>\r\n                <hr />\r\n                <p className=\"mb-0\">\r\n                  Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\r\n                </p>\r\n              </CAlert>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol xs=\"12\" md=\"6\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Alerts\r\n              <small> dismissing</small>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CAlert\r\n                color=\"info\"\r\n                closeButton\r\n              >\r\n                I am an dismissible alert!\r\n              </CAlert>\r\n              <CAlert\r\n                color=\"warning\"\r\n                show={visible}\r\n                closeButton\r\n                onShowChange={setVisible}\r\n              >\r\n                I will be closed in {visible} seconds!\r\n                <CProgress\r\n                  striped\r\n                  color=\"warning\"\r\n                  value={Number(visible) * 10}\r\n                  size=\"xs\"\r\n                  className=\"mb-3\"\r\n                />\r\n              </CAlert>\r\n\r\n              <CButton color=\"primary\" onClick={() => setVisible(10)}>\r\n                Reset timer\r\n              </CButton>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Alerts\r\n"],"names":["DocsLink","props","name","text","rest","_objectWithoutProperties","_excluded","href","concat","_jsx","className","children","CLink","_objectSpread","rel","target","React","_React$useState","_React$useState2","_slicedToArray","visible","setVisible","_jsxs","_Fragment","CRow","CCol","xs","md","CCard","CCardHeader","CCardBody","CAlert","color","closeButton","show","onShowChange","CProgress","striped","value","Number","size","CButton","onClick"],"sourceRoot":""}