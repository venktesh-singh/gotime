{"version":3,"file":"static/js/8873.beb6f864.chunk.js","mappings":"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","sources":["views/category/SimpleCard.jsx","redux/actions/categoryAction.js","views/category/category-add.jsx"],"sourcesContent":["import { Card } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\n\r\nconst CardRoot = styled(Card)(() => ({\r\n  height: '100%',\r\n  padding: '20px 24px',\r\n}));\r\n\r\nconst CardTitle = styled('div')(({ subtitle }) => ({\r\n  fontSize: '1.2rem',\r\n  fontWeight: '500',\r\n  textTransform: 'capitalize',\r\n  marginBottom: !subtitle && '16px',\r\n}));\r\n\r\nconst SimpleCard = ({ children, title, subtitle, icon }) => {\r\n  return (\r\n    <CardRoot elevation={6}>\r\n      <CardTitle subtitle={subtitle}>{title}</CardTitle>\r\n      {subtitle && <Box sx={{ mb: 2 }}>{subtitle}</Box>}\r\n      {children}\r\n    </CardRoot>\r\n  );\r\n};\r\n\r\nexport default SimpleCard;\r\n","import axios from 'axios';\r\nimport * as CONSTANT from '../../config';\r\nexport const GET_CAT_LIST = 'GET_CAT_LIST';\r\nexport const UPDATE_CAT = 'UPDATE_CAT';\r\n\r\nexport const getCategoryList = () => (dispatch) => {\r\n    axios.get(CONSTANT.BASE_URL + '/category').then((res) => {  \r\n        dispatch({\r\n            type: GET_CAT_LIST,\r\n            payload: res.data.user,\r\n        });\r\n    });\r\n};\r\n\r\nexport const addupdateCategory = (catData) => (dispatch) => {\r\n    console.log(\"Redux Category\", catData);\r\n    const formData = new FormData();  \r\n    formData.append('name', catData.name);\r\n    if (catData.image) {\r\n      formData.append('image', catData.image);\r\n    }\r\n    axios.post(CONSTANT.BASE_URL + `/category`, formData)\r\n      .then((res) => {   \r\n        dispatch({\r\n          type: UPDATE_CAT,\r\n          payload: res.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding/updating category:', error);\r\n      });\r\n  };\r\n     \r\n\r\n","import React, { useState } from 'react';\r\nimport { Stack } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\nimport SimpleCard from './SimpleCard';\r\nimport { Button, Grid, TextField, Icon } from '@mui/material';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addupdateCategory, getCategoryList } from 'src/redux/actions/categoryAction';\r\nimport { useHistory } from 'react-router-dom';  \r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Container = styled('div')(({ theme }) => ({\r\n  margin: '30px',\r\n  [theme.breakpoints.down('sm')]: { margin: '16px' },\r\n  '& .breadcrumb': {\r\n    marginBottom: '30px',\r\n    [theme.breakpoints.down('sm')]: { marginBottom: '16px' },\r\n  },\r\n}));\r\n\r\nconst Form = styled('form')(() => ({\r\n  paddingLeft: '16px',\r\n  paddingRight: '16px',\r\n}));\r\n\r\nconst StyledTextField = styled(TextField)(() => ({\r\n  marginBottom: '16px',\r\n}));\r\n\r\nconst AddCategory = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [uploading, setUploading] = useState(false);\r\n    //console.log(\"File Select\", selectedFile);\r\n    //console.log(\"File Upload\", uploading);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop: (acceptedFiles) => {\r\n        setSelectedFile(acceptedFiles[0]);\r\n        setUploading(false); // Reset the uploading state when a new file is selected\r\n    },\r\n    });\r\n\r\n    const handleSubmit = async (values) => {\r\n        const formData = new FormData();\r\n        formData.append('name', values.name);  \r\n        console.log(\"Selected File:\", selectedFile);\r\n        if (selectedFile) {\r\n            formData.append('image', selectedFile);\r\n        } else {\r\n            console.log(\"No file selected\");\r\n        }\r\n    \r\n        const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n        },\r\n        };\r\n    \r\n        setUploading(true);\r\n        try {\r\n        await dispatch(addupdateCategory(formData, config));\r\n        toast.success('Category Added Successfully!', {\r\n            // ...\r\n        });\r\n        dispatch(getCategoryList());\r\n        history.push(\"/category/category-list\");\r\n        } catch (error) {\r\n        console.error('Error adding category:', error);\r\n        toast.error('Failed to add category. Please try again later.', {\r\n            // ...\r\n        });\r\n        } finally {\r\n        setUploading(false);\r\n        }\r\n    };\r\n  \r\n  \r\n    const handleButtonClick = () => {\r\n        // Navigate back to the previous page\r\n        history.goBack();\r\n    };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        theme=\"colored\"\r\n        autoClose={2000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Container>\r\n        <Button\r\n          sx={{ mb: 2, pl: 1 }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleButtonClick}\r\n        >\r\n          <ArrowBackIcon aria-label=\"ArrowBackIcon\" aria-haspopup=\"true\" />\r\n          Back\r\n        </Button>\r\n\r\n        <Stack spacing={3}>\r\n          <SimpleCard title=\"Add New Category\">\r\n            <Formik\r\n              onSubmit={handleSubmit}\r\n              enableReinitialize={true}\r\n              initialValues={initialValues}\r\n              validationSchema={categorySchema}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Grid container spacing={3}>\r\n                    <Grid item sm={6} xs={12}>\r\n                      <StyledTextField\r\n                        fullWidth\r\n                        name=\"name\"\r\n                        label=\"Category Name\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.name || ''}\r\n                        error={Boolean(touched.name && errors.name)}\r\n                        helperText={touched.name && errors.name}\r\n                      />\r\n                      <Box flex={1}>\r\n                        <div style={{border:'2px dashed #aaa',padding:'12px',textAlign:'center'}} {...getRootProps()}>\r\n                            <input type=\"file\" name=\"image\" {...getInputProps()} />  \r\n                            {isDragActive ? (\r\n                            <p>Drop the image file here ...</p>\r\n                            ) : (\r\n                            <b>\r\n                                Drag and drop an image file here, or click to select file\r\n                            </b>\r\n                            )}\r\n                        </div>\r\n                      </Box>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    sx={{ mb: 2, px: 4 }}\r\n                    disabled={uploading}\r\n                    style={{marginTop:'10px'}}\r\n                  >\r\n                    {uploading ? 'Uploading...' : 'Add Category'}\r\n                  </Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </SimpleCard>\r\n        </Stack>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst categorySchema = Yup.object().shape({\r\n  name: Yup.string().required('Category name is required'),  \r\n});\r\n\r\nconst initialValues = {\r\n  name: '',\r\n};\r\n\r\nexport default AddCategory;\r\n"],"names":["CardRoot","styled","Card","height","padding","CardTitle","_ref","fontSize","fontWeight","textTransform","marginBottom","subtitle","_ref2","children","title","icon","_jsxs","elevation","_jsx","Box","sx","mb","getCategoryList","dispatch","axios","CONSTANT","then","res","type","payload","data","user","addupdateCategory","catData","console","log","formData","FormData","append","name","image","catch","error","Container","theme","margin","_defineProperty","breakpoints","down","Form","paddingLeft","paddingRight","StyledTextField","TextField","categorySchema","Yup","shape","required","initialValues","useDispatch","history","useHistory","_useState","useState","_useState2","_slicedToArray","selectedFile","setSelectedFile","_useState3","_useState4","uploading","setUploading","_useDropzone","useDropzone","accept","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","headers","toast","success","push","t0","finish","stop","_x","apply","arguments","_Fragment","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Button","pl","variant","color","onClick","goBack","ArrowBackIcon","Stack","spacing","SimpleCard","Formik","onSubmit","enableReinitialize","validationSchema","_ref4","errors","touched","handleChange","handleBlur","Grid","container","item","sm","xs","fullWidth","label","size","onBlur","onChange","value","Boolean","helperText","flex","_objectSpread","style","border","textAlign","px","disabled","marginTop"],"sourceRoot":""}