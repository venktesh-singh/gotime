{"version":3,"file":"static/js/341.92ef6b21.chunk.js","mappings":"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","sources":["components/formFields/passwordInput.js","views/auth/login/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nconst PasswordInput = ({ value, setValue, title = \"Password\", placeholder = \"Password\" }) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  return (\r\n    <CInputGroup>\r\n      <CInputGroupPrepend>\r\n        <CInputGroupText>\r\n          <CIcon name=\"cil-lock-locked\" />\r\n        </CInputGroupText>\r\n      </CInputGroupPrepend>\r\n      <CInput\r\n        value={value}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n        }}\r\n        type={showPassword ? \"\" : \"password\"}\r\n        placeholder={placeholder}\r\n        autoComplete=\"current-password\"\r\n      />\r\n      <CInputGroupPrepend\r\n        key={showPassword}\r\n        onClick={() => setShowPassword(!showPassword)}\r\n      >\r\n        <CInputGroupText>\r\n          <i className={`fas ${!showPassword ? \"fa-eye\" : \"fa-eye-slash\"}`}></i>\r\n        </CInputGroupText>\r\n      </CInputGroupPrepend>\r\n    </CInputGroup>\r\n  );\r\n};\r\n\r\nexport default PasswordInput;\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { login } from \"./apis\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SET_USER_DATA } from \"../actions\";\r\nimport localStorageConstants from \"src/constants/localstorageConstants\";\r\nimport { SET_LOADER } from \"src/redux/actions\";\r\nimport colors from \"src/constants/colors\";\r\nimport PasswordInput from \"src/components/formFields/passwordInput\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  // const [loader, setLoader] = useState(false);\r\n\r\n  const [userId, setUserId] = useState(\r\n    localStorage.getItem(localStorageConstants.userId)\r\n  );\r\n  if (userId) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  const onLoginPress = () => {\r\n    dispatch({ type: SET_LOADER, payload: true });\r\n    // dispatch({ type: SET_USER_DATA, payload: { id: 123 } });\r\n    login(\r\n      {\r\n        email: email,\r\n        password: password,\r\n      },\r\n      (data) => {\r\n        if (data?.status === \"success\") {\r\n          if (\r\n            data?.data?.user_details?.user_type != \"hr\" &&\r\n            data?.data?.user_details?.user_type != \"super_admin\"\r\n          ) {\r\n            setErrors({ message: \"Your login is restricted\" });\r\n            dispatch({ type: SET_LOADER, payload: false });\r\n          } else {\r\n            localStorage.setItem(\r\n              localStorageConstants.userId,\r\n              data?.data?.user_details?._id\r\n            );\r\n            localStorage.setItem(\r\n              localStorageConstants.accessToken,\r\n              data?.data?.token\r\n            );\r\n            dispatch({\r\n              type: SET_USER_DATA,\r\n              payload: data?.data?.user_details,\r\n            });\r\n            dispatch({ type: SET_LOADER, payload: false });\r\n            setUserId(data?.data?.user_details?.user_id);\r\n          }\r\n        } else {\r\n          setErrors({ message: data?.message });\r\n          // alert(data?.message);\r\n          dispatch({ type: SET_LOADER, payload: false });\r\n        }\r\n      },\r\n      () => {\r\n        dispatch({ type: SET_LOADER, payload: false });\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n      <CContainer>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"8\">\r\n            <CCardGroup>\r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  <CForm>\r\n                    <h1>Login</h1>\r\n                    <p className=\"text-muted\">Sign In to your account</p>\r\n                    <CInputGroup className=\"mb-3\">\r\n                      <CInputGroupPrepend>\r\n                        <CInputGroupText>\r\n                          <CIcon name=\"cil-user\" />\r\n                        </CInputGroupText>\r\n                      </CInputGroupPrepend>\r\n                      <CInput\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        autoComplete=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => {\r\n                          setEmail(e.target.value);\r\n                        }}\r\n                      />\r\n                    </CInputGroup>\r\n                    <div className=\"mb-4\">\r\n                      <PasswordInput value={password} setValue={setPassword} />\r\n                    </div>\r\n\r\n                    {errors?.message ? (\r\n                      <CRow className=\"mb-4\">\r\n                        <CCol xs=\"12\">\r\n                          <span style={{ color: \"red\", fontWeight: 500 }}>\r\n                            {errors?.message}\r\n                          </span>\r\n                        </CCol>\r\n                      </CRow>\r\n                    ) : null}\r\n                    <CRow>\r\n                      <CCol xs=\"6\">\r\n                        <CButton\r\n                          onClick={onLoginPress}\r\n                          color=\"primary\"\r\n                          className=\"px-4\"\r\n                        >\r\n                          Login\r\n                        </CButton>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CForm>\r\n                </CCardBody>\r\n              </CCard>\r\n              <CCard\r\n                className=\"text-white bg-primary py-5 d-md-down-none\"\r\n                style={{ width: \"44%\" }}\r\n              >\r\n                <CCardBody className=\"text-center\">\r\n                  <div>\r\n                    <h2>Go Time</h2>\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit,\r\n                      sed do eiusmod tempor incididunt ut labore et dolore magna\r\n                      aliqua.\r\n                    </p>\r\n                    <Link to=\"/\">\r\n                      <CButton\r\n                        color=\"primary\"\r\n                        className=\"mt-3\"\r\n                        active\r\n                        tabIndex={-1}\r\n                      >\r\n                        Visit Now!\r\n                      </CButton>\r\n                    </Link>\r\n                  </div>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["_ref","value","setValue","_ref$placeholder","title","placeholder","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsxs","CInputGroup","children","_jsx","CInputGroupPrepend","CInputGroupText","CIcon","name","CInput","onChange","e","target","type","autoComplete","onClick","className","concat","dispatch","useDispatch","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","errors","setErrors","_useState7","_useState8","_useState9","localStorage","getItem","localStorageConstants","userId","_useState10","setUserId","Redirect","to","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","PasswordInput","message","xs","style","color","fontWeight","CButton","SET_LOADER","payload","login","data","_data$data","_data$data$user_detai","_data$data2","_data$data2$user_deta","_data$data3","_data$data3$user_deta","_data$data4","_data$data5","_data$data6","_data$data6$user_deta","status","user_details","user_type","setItem","_id","accessToken","token","SET_USER_DATA","user_id","width","Link","active","tabIndex"],"sourceRoot":""}